@use "sass:math";

$viewMax: 1920; // YOUR VIEW MAX WIDTH HERE
$viewMin: 320; // YOUR VIEW MIN WIDTH HERE

@function toRem($value) {
  $remValue: ($value / 16) + rem;
  @return $remValue;
}

@mixin fluid-text($max, $min) {
  $s: ($max - $min) / ($viewMax - $viewMin);
  $b: -$viewMin * $s + $min;
  font-size: clamp(#{$min}px, #{$b}px + #{$s * 100}vw, #{$max}px);
}

@mixin fluid-size($max, $min) {
  $s: ($max - $min) / ($viewMax - $viewMin);
  $b: -$viewMin * $s + $min;
  width: clamp(#{$min}px, #{$b}px + #{$s * 100}vw, #{$max}px);
}
@function fluid-rem($max, $min) {
  @if $viewMax == $viewMin {
    @error "viewMax and viewMin must be different values.";
  }

  // Calculate slope and base
  $s: ($max - $min) / ($viewMax - $viewMin);
  $b: -$viewMin * $s + $min;

  // Convert to rem units
  $remValue: clamp(
    #{math.div($min, 16)}rem,
    calc(#{math.div($b, 16)}rem + #{($s * 100)}vw),
    #{math.div($max, 16)}rem
  );

  @return $remValue;
}

@mixin text-limit($limit: 1, $break: true) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: #{$limit};
  @if $break {
    word-break: break-all;
  }
}

@mixin reset-link {
  color: inherit;

  &,
  &:hover,
  &:focus {
    text-decoration: none;
    color: inherit;
  }
}

@mixin reset-button {
  background: transparent;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
}

@mixin flex-center($isInline: false) {
  @if $isInline {
    display: inline-flex;
  } @else {
    display: flex;
  }
  align-items: center;
  justify-content: center;
}

@mixin abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin square($size) {
  width: $size;
  aspect-ratio: 1;
}
